"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateV2ClientType = void 0;
const addTsTypeQueryToRefType_1 = require("./addTsTypeQueryToRefType");
const getV3ClientType_1 = require("./getV3ClientType");
const nativeTsRefTypes = ["TSAnyKeyword", "TSStringKeyword", "TSNumberKeyword", "TSBooleanKeyword"];
const nativeTsUnionTypes = ["Array", "Record"];
const nativeTsIdentifierTypes = ["Date", "Uint8Array", ...nativeTsUnionTypes];
const updateV2ClientType = (j, v2ClientType, { v2ClientName, v2ClientTypeName, v2ClientLocalName }) => {
    const v3ClientType = (0, getV3ClientType_1.getV3ClientType)(j, { v2ClientName, v2ClientTypeName, v2ClientLocalName });
    if (v2ClientType.parentPath?.value.type === "TSTypeQuery") {
        if (nativeTsRefTypes.includes(v3ClientType.type)) {
            v2ClientType.parentPath?.replace(v3ClientType);
            return;
        }
        if (v3ClientType.type === "TSTypeReference") {
            const v3ClientTypeRef = v3ClientType;
            if (v3ClientTypeRef.typeName.type === "Identifier") {
                const v3ClientTypeRefIdentifier = v3ClientTypeRef.typeName;
                if (nativeTsIdentifierTypes.includes(v3ClientTypeRefIdentifier.name)) {
                    if (nativeTsUnionTypes.includes(v3ClientTypeRefIdentifier.name)) {
                        (0, addTsTypeQueryToRefType_1.addTsTypeQueryToRefType)(j, v3ClientTypeRef);
                    }
                    v2ClientType.parentPath?.replace(v3ClientType);
                    return;
                }
            }
        }
    }
    v2ClientType.replace(v3ClientType);
};
exports.updateV2ClientType = updateV2ClientType;
